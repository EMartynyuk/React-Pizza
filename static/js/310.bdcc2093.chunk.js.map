{"version":3,"file":"static/js/310.bdcc2093.chunk.js","mappings":"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","sources":["components/FullPizza.tsx","pages/NotFound.tsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport NotFound from \"../pages/NotFound\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { RootState } from \"../store\";\r\nimport { pizzasTypes } from \"../store/pizzaSlice\";\r\n\r\nconst FullPizza = () => {\r\n  // const state = useSelector((state) => state.pizza.pizzas);\r\n  const state = useSelector((state: RootState) => state.pizza.pizzas);\r\n  // const params = useParams();\r\n  const params = useParams() as { id: string };\r\n  // const [pizza, setPizza] = useState();\r\n  const [pizza, setPizza] = useState<pizzasTypes>();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (state.length > 0) {\r\n      // let findPizza = state.find((el) => el.id === params.id);\r\n      let findPizza = state.find((el: pizzasTypes) => el.id === params.id);\r\n      if (findPizza) {\r\n        setPizza(findPizza);\r\n      }\r\n      setIsLoading(false);\r\n    } else {\r\n      // const getPizza = async (id) => {\r\n      const getPizza = async (id: string) => {\r\n        try {\r\n          let data = await fetch(\r\n            `https://6543640701b5e279de2045aa.mockapi.io/items/${id}`\r\n          );\r\n\r\n          if (!data.ok) {\r\n            setError(true);\r\n          }\r\n\r\n          let res = await data.json();\r\n\r\n          setPizza(res);\r\n        } catch (error: unknown) {\r\n          console.log(error);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n      getPizza(params.id);\r\n    }\r\n  }, []);\r\n\r\n\r\n  if (isLoading) {\r\n    return <h2>Идет загрузка...</h2>;\r\n  }\r\n\r\n  if (error) {\r\n    return <NotFound />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pizza-block pizza-block--full\">\r\n        <img className=\"pizza-block__image\" src={pizza?.imageUrl} alt=\"Pizza\" />\r\n        <h4 className=\"pizza-block__title\">{pizza?.title}</h4>\r\n        <div className=\"pizza-block__descr\">\r\n          <span>Описание:</span> Тесто, томатный соус, моцарелла, помидоры,\r\n          базилик, оливковое масло.\r\n        </div>\r\n        <div className=\"pizza-block__price\">от {pizza?.price[0][0]} ₽</div>\r\n      </div>\r\n      <Link to=\"..\" className=\"button button button--black\">\r\n        <span>Вернуться назад</span>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FullPizza;\r\n","import { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport img from \"../assets/img/empty-cart.png\";\r\n\r\nconst NotFound: FC = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h2>Страница не найдена</h2>\r\n      <p>Вероятней всего, данной страницы не существует.</p>\r\n      <img src={img} alt=\"Empty cart\" />\r\n      <Link to=\"..\" className=\"button button--black\">\r\n        <span>Вернуться назад</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n"],"names":["state","useSelector","pizza","pizzas","params","useParams","_useState","useState","_useState2","_slicedToArray","setPizza","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","length","findPizza","find","el","id","getPizza","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","res","wrap","_context","prev","next","fetch","concat","sent","ok","json","t0","console","log","finish","stop","_x","apply","arguments","_jsx","children","NotFound","_jsxs","_Fragment","className","src","imageUrl","alt","title","price","Link","to","img"],"sourceRoot":""}